# templates/microservices.yaml - Con puerto de management separado

{{- range .Values.microservices }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name }}
  namespace: {{ $.Values.namespace }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .name }}
  template:
    metadata:
      labels:
        app: {{ .name }}
    spec:
      containers:
        - name: {{ .name }}
          image: {{ $.Values.artifactRegistry.location }}-docker.pkg.dev/{{ $.Values.artifactRegistry.projectId }}/{{ $.Values.artifactRegistry.repository }}/{{ .name }}:{{ $.Values.imageTag }}
          ports:
            - name: management
              containerPort: 8081
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi
          env:
            - name: SERVER_PORT
              value: "0"
            - name: MANAGEMENT_SERVER_PORT
              value: "8081"
            - name: MANAGEMENT_ENDPOINT_HEALTH_PROBES_ENABLED
              value: "true"
            - name: SPRING_APPLICATION_NAME
              value: {{ .name }}
            - name: SPRING_PROFILES_ACTIVE
              value: "{{ $.Values.springProfiles }},microservices"

            - name: EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE
              value: {{ $.Values.eurekaUrl }}
            - name: SPRING_CLOUD_CONFIG_URI
              value: {{ $.Values.configServerUrl }}
            - name: SPRING_CONFIG_IMPORT
              value: "configserver:{{ $.Values.configServerUrl }}"

            - name: SPRING_DATASOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .name }}-db-secret
                  key: url
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .name }}-db-secret
                  key: username
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .name }}-db-secret
                  key: password

            {{- if eq .name "reservations-service" }}
            - name: SPRING_CACHE_TYPE
              value: "simple"

            - name: SPRING_MAIL_HOST
              valueFrom:
                secretKeyRef:
                  name: email-secret
                  key: host
            - name: SPRING_MAIL_PORT
              valueFrom:
                secretKeyRef:
                  name: email-secret
                  key: port
            - name: SPRING_MAIL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: email-secret
                  key: username
            - name: SPRING_MAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: email-secret
                  key: password
            {{- end }}

            - name: TZ
              value: America/Santiago

          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: management
            failureThreshold: 10
            periodSeconds: 10
            initialDelaySeconds: 60
            timeoutSeconds: 5

          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: management
            failureThreshold: 5
            periodSeconds: 30
            initialDelaySeconds: 120
            timeoutSeconds: 10

          startupProbe:
            httpGet:
              path: /actuator/health
              port: management
            failureThreshold: 60
            periodSeconds: 10
            initialDelaySeconds: 30
            timeoutSeconds: 5


---
apiVersion: v1
kind: Service
metadata:
  name: {{ .name }}
  namespace: {{ $.Values.namespace }}
spec:
  type: ClusterIP
  ports:
    - name: management
      port: 8081
      targetPort: management
  selector:
    app: {{ .name }}
{{- end }}