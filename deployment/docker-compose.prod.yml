services:
  postgres:
    image: postgres:latest
    container_name: karting-db
    environment:
      POSTGRES_DB: kartingdb
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend-net # Solo en la red backend
  backend1:
    image: ${BACKEND_IMAGE}:${IMAGE_TAG:-latest}
    container_name: karting-backend1
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_URL: jdbc:postgresql://postgres:5432/kartingdb
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SERVER_PORT: 8080
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - backend-net

  backend2:
    image: ${BACKEND_IMAGE:${IMAGE_TAG:-latest}
    container_name: karting-backend2
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_URL: jdbc:postgresql://postgres:5432/kartingdb
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SERVER_PORT: 8080
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - backend-net

  backend3:
    image: ${BACKEND_IMAGE}:${IMAGE_TAG:-latest}
    container_name: karting-backend3
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_URL: jdbc:postgresql://postgres:5432/kartingdb
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      SERVER_PORT: 8080
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - backend-net
  frontend:
    image: ${FRONTEND_IMAGE}:${IMAGE_TAG:-latest}
    container_name: karting-frontend
    restart: unless-stopped
    networks:
      - frontend-net
  nginx-proxy:
    image: nginx:stable-alpine
    container_name: karting-nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/tingeso.solarworks.cl.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend1
      - backend2
      - backend3
    restart: unless-stopped
    networks:
      - frontend-net
      - backend-net
volumes:
  postgres_data:

networks:
  frontend-net:
    driver: bridge
  backend-net:
    driver: bridge