# Este archivo debe estar en: pep1/deployment/docker-compose.dev.yml

services:
  backend:
    build:
      context: ..
      dockerfile: deployment/backend/Dockerfile.dev.backend
    ports:
      - "8080:8080"
      - "35729:35729"
      - "8000:8000"
    volumes:
      - ../backend/src:/app/src
      - ../backend/pom.xml:/app/pom.xml
      - maven-repo:/root/.m2 #cache maven
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network

  frontend:
    build:
      context: ../frontend
      dockerfile: ../deployment/frontend/Dockerfile.dev.frontend
    ports:
      - "5173:5173"
    volumes:
      - ../frontend:/app
      # Bun también instalará en node_modules, así que cacheamos esa carpeta
      - node_modules:/app/node_modules
    environment:
      CHOKIDAR_USEPOLLING: "true"
      NODE_ENV: development
      HOST: 0.0.0.0
    # El CMD ya está definido en el Dockerfile (bun run dev)
    restart: unless-stopped
    networks:
      - app-network

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - ./backend/data/postgres:/var/lib/postgresql/data
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "5050:80"
    env_file:
      - .env
    volumes:
      - ./backend/data/pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - app-network

volumes:
  maven-repo:   # maven cache
  node_modules: # node_modules cache

networks:
  app-network:
    driver: bridge